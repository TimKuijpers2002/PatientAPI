name: Build & Publish

on:
  push:
    branches: ["master", "accept", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore
        run: dotnet restore ./PatientAPI.sln

      - name: Build
        run: dotnet build ./PatientAPI.sln --configuration Release --no-restore

  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Environment Variables
        run: |
          echo "SQL_DATABASE=${{ secrets.SQL_DATABASE }}" >> $GITHUB_ENV
          echo "SQL_SERVER=${{ secrets.SQL_SERVER }}" >> $GITHUB_ENV
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> $GITHUB_ENV
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> $GITHUB_ENV

      - name: Debug Output
        run: |
          echo "SQL_DATABASE=${SQL_DATABASE}"
          echo "SQL_SERVER=${SQL_SERVER}"
          echo "SQL_USER=${SQL_USER}"
          echo "SQL_PASSWORD=${SQL_PASSWORD}"
          cat ./PatientAPI/appsettings.json

      - name: Replace Placeholders in appsettings.json
        run: |
          cat ./PatientAPI/appsettings.json | \
            jq --arg sqlDatabase "${SQL_DATABASE}" \
               --arg sqlServer "${SQL_SERVER}" \
               --arg sqlUser "${SQL_USER}" \
               --arg sqlPassword "${SQL_PASSWORD}" \
               '.ConnectionStrings.DefaultConnection |= "Server=\($sqlServer);Database=\($sqlDatabase);User ID=\($sqlUser);Password=\($sqlPassword);TrustServerCertificate=True"' \
            > ./PatientAPI/appsettings.json

      - name: Debug Output after Replacement
        run: cat ./PatientAPI/appsettings.json

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/patientapi:latest
